       NOTE: Most of the tests in DIEHARD return a p-value, which               
       should be uniform on [0,1) if the input file contains truly              
       independent random bits.   Those p-values are obtained by                
       p=F(X), where F is the assumed distribution of the sample                
       random variable X---often normal. But that assumed F is just             
       an asymptotic approximation, for which the fit will be worst             
       in the tails. Thus you should not be surprised with                      
       occasional p-values near 0 or 1, such as .0012 or .9983.                 
       When a bit stream really FAILS BIG, you will get p's of 0 or             
       1 to six or more places.  By all means, do not, as a                     
       Statistician might, think that a p < .025 or p> .975 means               
       that the RNG has "failed the test at the .05 level".  Such               
       p's happen among the hundreds that DIEHARD produces, even                
       with good RNG's.  So keep in mind that " p happens".                     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            This is the BIRTHDAY SPACINGS TEST                 ::        
     :: Choose m birthdays in a year of n days.  List the spacings    ::        
     :: between the birthdays.  If j is the number of values that     ::        
     :: occur more than once in that list, then j is asymptotically   ::        
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::        
     :: must be quite large, say n>=2^18, for comparing the results   ::        
     :: to the Poisson distribution with that mean.  This test uses   ::        
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::        
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::        
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::        
     :: provides a p value.  The first test uses bits 1-24 (counting  ::        
     :: from the left) from integers in the specified file.           ::        
     ::   Then the file is closed and reopened. Next, bits 2-25 are   ::        
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::        
     :: Each set of bits provides a p-value, and the nine p-values    ::        
     :: provide a sample for a KSTEST.                                ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for o:\tmp\f48h.raw
                   For a sample of size 500:     mean   
           o:\tmp\f48h.raw using bits  1 to 24   1.852
  duplicate       number       number 
  spacings       observed     expected
        0          82.       67.668
        1         141.      135.335
        2         129.      135.335
        3          93.       90.224
        4          38.       45.112
        5          11.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     8.15 p-value=  .773026
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           o:\tmp\f48h.raw using bits  2 to 25   1.884
  duplicate       number       number 
  spacings       observed     expected
        0          73.       67.668
        1         150.      135.335
        2         128.      135.335
        3          96.       90.224
        4          32.       45.112
        5          11.       18.045
  6 to INF         10.        8.282
 Chisquare with  6 d.o.f. =     9.69 p-value=  .861872
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           o:\tmp\f48h.raw using bits  3 to 26   1.942
  duplicate       number       number 
  spacings       observed     expected
        0          62.       67.668
        1         140.      135.335
        2         153.      135.335
        3          83.       90.224
        4          40.       45.112
        5          17.       18.045
  6 to INF          5.        8.282
 Chisquare with  6 d.o.f. =     5.46 p-value=  .513660
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           o:\tmp\f48h.raw using bits  4 to 27   1.922
  duplicate       number       number 
  spacings       observed     expected
        0          68.       67.668
        1         158.      135.335
        2         122.      135.335
        3          80.       90.224
        4          43.       45.112
        5          27.       18.045
  6 to INF          2.        8.282
 Chisquare with  6 d.o.f. =    15.58 p-value=  .983791
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           o:\tmp\f48h.raw using bits  5 to 28   1.838
  duplicate       number       number 
  spacings       observed     expected
        0          80.       67.668
        1         143.      135.335
        2         133.      135.335
        3          89.       90.224
        4          36.       45.112
        5          16.       18.045
  6 to INF          3.        8.282
 Chisquare with  6 d.o.f. =     8.18 p-value=  .774732
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           o:\tmp\f48h.raw using bits  6 to 29   1.920
  duplicate       number       number 
  spacings       observed     expected
        0          73.       67.668
        1         142.      135.335
        2         131.      135.335
        3          92.       90.224
        4          37.       45.112
        5          22.       18.045
  6 to INF          3.        8.282
 Chisquare with  6 d.o.f. =     6.62 p-value=  .642216
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           o:\tmp\f48h.raw using bits  7 to 30   1.936
  duplicate       number       number 
  spacings       observed     expected
        0          63.       67.668
        1         140.      135.335
        2         156.      135.335
        3          82.       90.224
        4          34.       45.112
        5          17.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     7.19 p-value=  .696786
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           o:\tmp\f48h.raw using bits  8 to 31   1.962
  duplicate       number       number 
  spacings       observed     expected
        0          69.       67.668
        1         148.      135.335
        2         131.      135.335
        3          79.       90.224
        4          45.       45.112
        5          19.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     2.86 p-value=  .173746
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           o:\tmp\f48h.raw using bits  9 to 32   1.996
  duplicate       number       number 
  spacings       observed     expected
        0          89.       67.668
        1         121.      135.335
        2         114.      135.335
        3          98.       90.224
        4          46.       45.112
        5          23.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =    13.72 p-value=  .967048
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .773026   .861872   .513660   .983791   .774732
        .642216   .696786   .173746   .967048
  A KSTEST for the 9 p-values yields  .958966

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::        
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::        
     :: ion 32-bit random integers.  Each set of five consecutive     ::        
     :: integers can be in one of 120 states, for the 5! possible or- ::        
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::        
     :: each provide a state. As many thousands of state transitions  ::        
     :: are observed,  cumulative counts are made of the number of    ::        
     :: occurences of each state.  Then the quadratic form in the     ::        
     :: weak inverse of the 120x120 covariance matrix yields a test   ::        
     :: equivalent to the likelihood ratio test that the 120 cell     ::        
     :: counts came from the specified (asymptotically) normal dis-   ::        
     :: tribution with the specified 120x120 covariance matrix (with  ::        
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           OPERM5 test for file o:\tmp\f48h.raw
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom=117.497; p-value= .901061
           OPERM5 test for file o:\tmp\f48h.raw
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 90.960; p-value= .294535
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::        
     :: 31 bits of 31 random integers from the test sequence are used ::        
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::        
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::        
     :: are rare, and their counts are pooled with those for rank 28. ::        
     :: Ranks are found for 40,000 such random matrices and a chisqua-::        
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for o:\tmp\f48h.raw
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       208     211.4   .055259     .055
        29      5105    5134.0   .163925     .219
        30     23144   23103.0   .072595     .292
        31     11543   11551.5   .006291     .298
  chisquare=  .298 for 3 d. of f.; p-value= .332157
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::        
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::        
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::        
     :: less than 29 are rare, and their counts are pooled with those ::        
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::        
     :: and a chisquare test is performed on counts for ranks  32,31, ::        
     :: 30 and <=29.                                                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for o:\tmp\f48h.raw
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29       220     211.4   .348364     .348
        30      5032    5134.0  2.026893    2.375
        31     23202   23103.0   .423828    2.799
        32     11546   11551.5   .002642    2.802
  chisquare= 2.802 for 3 d. of f.; p-value= .623866
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::        
     :: six random 32-bit integers from the generator under test, a   ::        
     :: specified byte is chosen, and the resulting six bytes form a  ::        
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::        
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::        
     :: pooled with those for rank 4. Ranks are found for 100,000     ::        
     :: random matrices, and a chi-square test is performed on        ::        
     :: counts for ranks 6,5 and <=4.                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
         Binary Rank Test for o:\tmp\f48h.raw
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1010       944.3       4.571       4.571
          r =5        21678     21743.9        .200       4.771
          r =6        77312     77311.8        .000       4.771
                        p=1-exp(-SUM/2)= .90794
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          993       944.3       2.511       2.511
          r =5        21725     21743.9        .016       2.528
          r =6        77282     77311.8        .011       2.539
                        p=1-exp(-SUM/2)= .71908
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          969       944.3        .646        .646
          r =5        21968     21743.9       2.310       2.956
          r =6        77063     77311.8        .801       3.756
                        p=1-exp(-SUM/2)= .84713
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          957       944.3        .171        .171
          r =5        21869     21743.9        .720        .891
          r =6        77174     77311.8        .246       1.136
                        p=1-exp(-SUM/2)= .43338
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          875       944.3       5.086       5.086
          r =5        21783     21743.9        .070       5.156
          r =6        77342     77311.8        .012       5.168
                        p=1-exp(-SUM/2)= .92453
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          922       944.3        .527        .527
          r =5        21795     21743.9        .120        .647
          r =6        77283     77311.8        .011        .658
                        p=1-exp(-SUM/2)= .28018
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          917       944.3        .789        .789
          r =5        21960     21743.9       2.148       2.937
          r =6        77123     77311.8        .461       3.398
                        p=1-exp(-SUM/2)= .81714
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1001       944.3       3.404       3.404
          r =5        21811     21743.9        .207       3.611
          r =6        77188     77311.8        .198       3.810
                        p=1-exp(-SUM/2)= .85115
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          969       944.3        .646        .646
          r =5        21807     21743.9        .183        .829
          r =6        77224     77311.8        .100        .929
                        p=1-exp(-SUM/2)= .37150
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          977       944.3       1.132       1.132
          r =5        21823     21743.9        .288       1.420
          r =6        77200     77311.8        .162       1.582
                        p=1-exp(-SUM/2)= .54654
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          959       944.3        .229        .229
          r =5        21867     21743.9        .697        .926
          r =6        77174     77311.8        .246       1.171
                        p=1-exp(-SUM/2)= .44327
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          965       944.3        .454        .454
          r =5        21684     21743.9        .165        .619
          r =6        77351     77311.8        .020        .639
                        p=1-exp(-SUM/2)= .27334
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          966       944.3        .499        .499
          r =5        21796     21743.9        .125        .623
          r =6        77238     77311.8        .070        .694
                        p=1-exp(-SUM/2)= .29316
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          925       944.3        .395        .395
          r =5        22126     21743.9       6.715       7.109
          r =6        76949     77311.8       1.703       8.812
                        p=1-exp(-SUM/2)= .98779
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          979       944.3       1.275       1.275
          r =5        21871     21743.9        .743       2.018
          r =6        77150     77311.8        .339       2.357
                        p=1-exp(-SUM/2)= .69220
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          928       944.3        .281        .281
          r =5        21695     21743.9        .110        .391
          r =6        77377     77311.8        .055        .446
                        p=1-exp(-SUM/2)= .20003
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          938       944.3        .042        .042
          r =5        21649     21743.9        .414        .456
          r =6        77413     77311.8        .132        .589
                        p=1-exp(-SUM/2)= .25498
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          952       944.3        .063        .063
          r =5        21777     21743.9        .050        .113
          r =6        77271     77311.8        .022        .135
                        p=1-exp(-SUM/2)= .06513
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          946       944.3        .003        .003
          r =5        21813     21743.9        .220        .223
          r =6        77241     77311.8        .065        .287
                        p=1-exp(-SUM/2)= .13389
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          890       944.3       3.123       3.123
          r =5        21782     21743.9        .067       3.189
          r =6        77328     77311.8        .003       3.193
                        p=1-exp(-SUM/2)= .79737
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          931       944.3        .187        .187
          r =5        21548     21743.9       1.765       1.952
          r =6        77521     77311.8        .566       2.518
                        p=1-exp(-SUM/2)= .71611
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          939       944.3        .030        .030
          r =5        21606     21743.9        .875        .904
          r =6        77455     77311.8        .265       1.170
                        p=1-exp(-SUM/2)= .44277
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          948       944.3        .014        .014
          r =5        21676     21743.9        .212        .227
          r =6        77376     77311.8        .053        .280
                        p=1-exp(-SUM/2)= .13057
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          942       944.3        .006        .006
          r =5        21682     21743.9        .176        .182
          r =6        77376     77311.8        .053        .235
                        p=1-exp(-SUM/2)= .11092
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG o:\tmp\f48h.raw
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          953       944.3        .080        .080
          r =5        21629     21743.9        .607        .687
          r =6        77418     77311.8        .146        .833
                        p=1-exp(-SUM/2)= .34070
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
     .907941     .719080     .847131     .433381     .924530
     .280178     .817142     .851154     .371501     .546542
     .443266     .273340     .293158     .987794     .692197
     .200028     .254982     .065127     .133892     .797365
     .716114     .442769     .130566     .110917     .340704
   brank test summary for o:\tmp\f48h.raw
       The KS test for those 25 supposed UNI's yields
                    KS p-value= .063467

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::                   THE BITSTREAM TEST                          ::        
     :: The file under test is viewed as a stream of bits. Call them  ::        
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::        
     :: and think of the stream of bits as a succession of 20-letter  ::        
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::        
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::        
     :: the number of missing 20-letter (20-bit) words in a string of ::        
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::        
     :: letter words.  For a truly random string of 2^21+19 bits, the ::        
     :: number of missing words j should be (very close to) normally  ::        
     :: distributed with mean 141,909 and sigma 428.  Thus            ::        
     ::  (j-141909)/428 should be a standard normal variate (z score) ::        
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::        
     :: twenty times.                                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 THE OVERLAPPING 20-tuples BITSTREAM  TEST, 20 BITS PER WORD, N words
   This test uses N=2^21 and samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
---------------------------------------------------------
 tst no  1:  142152 missing words,     .57 sigmas from mean, p-value= .71464
 tst no  2:  142078 missing words,     .39 sigmas from mean, p-value= .65324
 tst no  3:  142068 missing words,     .37 sigmas from mean, p-value= .64458
 tst no  4:  142230 missing words,     .75 sigmas from mean, p-value= .77314
 tst no  5:  142294 missing words,     .90 sigmas from mean, p-value= .81561
 tst no  6:  142024 missing words,     .27 sigmas from mean, p-value= .60562
 tst no  7:  141865 missing words,    -.10 sigmas from mean, p-value= .45876
 tst no  8:  141755 missing words,    -.36 sigmas from mean, p-value= .35921
 tst no  9:  141383 missing words,   -1.23 sigmas from mean, p-value= .10940
 tst no 10:  141553 missing words,    -.83 sigmas from mean, p-value= .20255
 tst no 11:  141938 missing words,     .07 sigmas from mean, p-value= .52671
 tst no 12:  141978 missing words,     .16 sigmas from mean, p-value= .56374
 tst no 13:  142231 missing words,     .75 sigmas from mean, p-value= .77385
 tst no 14:  141766 missing words,    -.33 sigmas from mean, p-value= .36886
 tst no 15:  141688 missing words,    -.52 sigmas from mean, p-value= .30254
 tst no 16:  141249 missing words,   -1.54 sigmas from mean, p-value= .06144
 tst no 17:  142053 missing words,     .34 sigmas from mean, p-value= .63144
 tst no 18:  141728 missing words,    -.42 sigmas from mean, p-value= .33591
 tst no 19:  141774 missing words,    -.32 sigmas from mean, p-value= .37593
 tst no 20:  142193 missing words,     .66 sigmas from mean, p-value= .74627

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The tests OPSO, OQSO and DNA                      ::        
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::        
     :: The OPSO test considers 2-letter words from an alphabet of    ::        
     :: 1024 letters.  Each letter is determined by a specified ten   ::        
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::        
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::        
     :: "keystrokes")  and counts the number of missing words---that  ::        
     :: is 2-letter words which do not appear in the entire sequence. ::        
     :: That count should be very close to normally distributed with  ::        
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::        
     :: be a standard normal variable. The OPSO test takes 32 bits at ::        
     :: a time from the test file and uses a designated set of ten    ::        
     :: consecutive bits. It then restarts the file for the next de-  ::        
     :: signated 10 bits, and so on.                                  ::        
     ::                                                               ::        
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::        
     ::   The test OQSO is similar, except that it considers 4-letter ::        
     :: words from an alphabet of 32 letters, each letter determined  ::        
     :: by a designated string of 5 consecutive bits from the test    ::        
     :: file, elements of which are assumed 32-bit random integers.   ::        
     :: The mean number of missing words in a sequence of 2^21 four-  ::        
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::        
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::        
     :: extensive simulation.                                         ::        
     ::                                                               ::        
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::        
     :: determined by two designated bits in the sequence of random   ::        
     :: integers being tested.  It considers 10-letter words, so that ::        
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::        
     :: mean number of missing words from a string of 2^21  (over-    ::        
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::        
     :: The standard deviation sigma=339 was determined as for OQSO   ::        
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::        
     :: three places), not determined by simulation.                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 OPSO test for generator o:\tmp\f48h.raw
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for o:\tmp\f48h.raw using bits 23 to 32        141851  -.201  .4203
    OPSO for o:\tmp\f48h.raw using bits 22 to 31        141772  -.474  .3179
    OPSO for o:\tmp\f48h.raw using bits 21 to 30        141808  -.349  .3634
    OPSO for o:\tmp\f48h.raw using bits 20 to 29        141554 -1.225  .1102
    OPSO for o:\tmp\f48h.raw using bits 19 to 28        141893  -.056  .4775
    OPSO for o:\tmp\f48h.raw using bits 18 to 27        141757  -.525  .2997
    OPSO for o:\tmp\f48h.raw using bits 17 to 26        141791  -.408  .3416
    OPSO for o:\tmp\f48h.raw using bits 16 to 25        141979   .240  .5949
    OPSO for o:\tmp\f48h.raw using bits 15 to 24        141754  -.536  .2961
    OPSO for o:\tmp\f48h.raw using bits 14 to 23        141916   .023  .5092
    OPSO for o:\tmp\f48h.raw using bits 13 to 22        141466 -1.529  .0632
    OPSO for o:\tmp\f48h.raw using bits 12 to 21        141697  -.732  .2320
    OPSO for o:\tmp\f48h.raw using bits 11 to 20        142096   .644  .7401
    OPSO for o:\tmp\f48h.raw using bits 10 to 19        141687  -.767  .2216
    OPSO for o:\tmp\f48h.raw using bits  9 to 18        141979   .240  .5949
    OPSO for o:\tmp\f48h.raw using bits  8 to 17        141909  -.001  .4995
    OPSO for o:\tmp\f48h.raw using bits  7 to 16        142169   .895  .8147
    OPSO for o:\tmp\f48h.raw using bits  6 to 15        141901  -.029  .4885
    OPSO for o:\tmp\f48h.raw using bits  5 to 14        141884  -.087  .4652
    OPSO for o:\tmp\f48h.raw using bits  4 to 13        142141   .799  .7878
    OPSO for o:\tmp\f48h.raw using bits  3 to 12        142060   .520  .6983
    OPSO for o:\tmp\f48h.raw using bits  2 to 11        141493 -1.436  .0756
    OPSO for o:\tmp\f48h.raw using bits  1 to 10        141401 -1.753  .0398
 OQSO test for generator o:\tmp\f48h.raw
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for o:\tmp\f48h.raw using bits 28 to 32        142523  2.080  .9812
    OQSO for o:\tmp\f48h.raw using bits 27 to 31        141789  -.408  .3417
    OQSO for o:\tmp\f48h.raw using bits 26 to 30        142124   .728  .7666
    OQSO for o:\tmp\f48h.raw using bits 25 to 29        142061   .514  .6964
    OQSO for o:\tmp\f48h.raw using bits 24 to 28        142619  2.406  .9919
    OQSO for o:\tmp\f48h.raw using bits 23 to 27        142115   .697  .7572
    OQSO for o:\tmp\f48h.raw using bits 22 to 26        141844  -.221  .4124
    OQSO for o:\tmp\f48h.raw using bits 21 to 25        141914   .016  .5063
    OQSO for o:\tmp\f48h.raw using bits 20 to 24        141784  -.425  .3355
    OQSO for o:\tmp\f48h.raw using bits 19 to 23        142527  2.094  .9819
    OQSO for o:\tmp\f48h.raw using bits 18 to 22        141592 -1.076  .1410
    OQSO for o:\tmp\f48h.raw using bits 17 to 21        141563 -1.174  .1202
    OQSO for o:\tmp\f48h.raw using bits 16 to 20        141780  -.438  .3305
    OQSO for o:\tmp\f48h.raw using bits 15 to 19        141731  -.605  .2728
    OQSO for o:\tmp\f48h.raw using bits 14 to 18        142132   .755  .7748
    OQSO for o:\tmp\f48h.raw using bits 13 to 17        142037   .433  .6674
    OQSO for o:\tmp\f48h.raw using bits 12 to 16        141766  -.486  .3135
    OQSO for o:\tmp\f48h.raw using bits 11 to 15        141570 -1.150  .1250
    OQSO for o:\tmp\f48h.raw using bits 10 to 14        142192   .958  .8310
    OQSO for o:\tmp\f48h.raw using bits  9 to 13        141595 -1.066  .1433
    OQSO for o:\tmp\f48h.raw using bits  8 to 12        141265 -2.184  .0145
    OQSO for o:\tmp\f48h.raw using bits  7 to 11        141868  -.140  .4443
    OQSO for o:\tmp\f48h.raw using bits  6 to 10        142272  1.229  .8905
    OQSO for o:\tmp\f48h.raw using bits  5 to  9        141814  -.323  .3733
    OQSO for o:\tmp\f48h.raw using bits  4 to  8        141993   .284  .6117
    OQSO for o:\tmp\f48h.raw using bits  3 to  7        141821  -.299  .3823
    OQSO for o:\tmp\f48h.raw using bits  2 to  6        142286  1.277  .8992
    OQSO for o:\tmp\f48h.raw using bits  1 to  5        142031   .412  .6600
  DNA test for generator o:\tmp\f48h.raw
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for o:\tmp\f48h.raw using bits 31 to 32        141678  -.682  .2475
     DNA for o:\tmp\f48h.raw using bits 30 to 31        141986   .226  .5895
     DNA for o:\tmp\f48h.raw using bits 29 to 30        141564 -1.019  .1542
     DNA for o:\tmp\f48h.raw using bits 28 to 29        141875  -.101  .4597
     DNA for o:\tmp\f48h.raw using bits 27 to 28        141841  -.202  .4201
     DNA for o:\tmp\f48h.raw using bits 26 to 27        141745  -.485  .3139
     DNA for o:\tmp\f48h.raw using bits 25 to 26        142327  1.232  .8910
     DNA for o:\tmp\f48h.raw using bits 24 to 25        141777  -.390  .3481
     DNA for o:\tmp\f48h.raw using bits 23 to 24        141735  -.514  .3035
     DNA for o:\tmp\f48h.raw using bits 22 to 23        141960   .149  .5594
     DNA for o:\tmp\f48h.raw using bits 21 to 22        142532  1.837  .9669
     DNA for o:\tmp\f48h.raw using bits 20 to 21        142231   .949  .8287
     DNA for o:\tmp\f48h.raw using bits 19 to 20        142279  1.090  .8622
     DNA for o:\tmp\f48h.raw using bits 18 to 19        142533  1.840  .9671
     DNA for o:\tmp\f48h.raw using bits 17 to 18        142202   .863  .8060
     DNA for o:\tmp\f48h.raw using bits 16 to 17        142170   .769  .7790
     DNA for o:\tmp\f48h.raw using bits 15 to 16        141259 -1.918  .0275
     DNA for o:\tmp\f48h.raw using bits 14 to 15        141478 -1.272  .1016
     DNA for o:\tmp\f48h.raw using bits 13 to 14        141845  -.190  .4247
     DNA for o:\tmp\f48h.raw using bits 12 to 13        142121   .624  .7338
     DNA for o:\tmp\f48h.raw using bits 11 to 12        141618  -.859  .1951
     DNA for o:\tmp\f48h.raw using bits 10 to 11        141694  -.635  .2627
     DNA for o:\tmp\f48h.raw using bits  9 to 10        141888  -.063  .4749
     DNA for o:\tmp\f48h.raw using bits  8 to  9        141277 -1.865  .0311
     DNA for o:\tmp\f48h.raw using bits  7 to  8        141390 -1.532  .0628
     DNA for o:\tmp\f48h.raw using bits  6 to  7        142406  1.465  .9286
     DNA for o:\tmp\f48h.raw using bits  5 to  6        141318 -1.744  .0406
     DNA for o:\tmp\f48h.raw using bits  4 to  5        142133   .660  .7453
     DNA for o:\tmp\f48h.raw using bits  3 to  4        142074   .486  .6864
     DNA for o:\tmp\f48h.raw using bits  2 to  3        141400 -1.502  .0665
     DNA for o:\tmp\f48h.raw using bits  1 to  2        142601  2.040  .9793

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::        
     :: Consider the file under test as a stream of bytes (four per   ::        
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::        
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::        
     :: the stream of bytes provide a string of overlapping  5-letter ::        
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::        
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::        
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::        
     :: we have a monkey at a typewriter hitting five keys with vari- ::        
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::        
     :: possible 5-letter words, and from a string of 256,000 (over-  ::        
     :: lapping) 5-letter words, counts are made on the frequencies   ::        
     :: for each word.   The quadratic form in the weak inverse of    ::        
     :: the covariance matrix of the cell counts provides a chisquare ::        
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::        
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
   Test results for o:\tmp\f48h.raw
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for o:\tmp\f48h.raw  2440.49      -.842      .199996
 byte stream for o:\tmp\f48h.raw  2467.67      -.457      .323771

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::        
     :: Consider the file under test as a stream of 32-bit integers.  ::        
     :: From each integer, a specific byte is chosen , say the left-  ::        
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::        
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::        
     :: the specified bytes from successive integers provide a string ::        
     :: of (overlapping) 5-letter words, each "letter" taking values  ::        
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::        
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::        
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::        
     :: hitting five keys with with various probabilities::  37,56,70,::        
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::        
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::        
     :: are made on the frequencies for each word. The quadratic form ::        
     :: in the weak inverse of the covariance matrix of the cell      ::        
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::        
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::        
     :: and 4-letter cell counts.                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8  2349.40     -2.130      .016592
           bits  2 to  9  2519.99       .283      .611274
           bits  3 to 10  2461.07      -.551      .290964
           bits  4 to 11  2491.73      -.117      .453437
           bits  5 to 12  2434.85      -.921      .178417
           bits  6 to 13  2533.97       .480      .684556
           bits  7 to 14  2711.63      2.993      .998618
           bits  8 to 15  2536.46       .516      .696939
           bits  9 to 16  2539.10       .553      .709848
           bits 10 to 17  2515.00       .212      .584022
           bits 11 to 18  2305.88     -2.745      .003023
           bits 12 to 19  2337.21     -2.302      .010661
           bits 13 to 20  2600.38      1.420      .922131
           bits 14 to 21  2305.92     -2.745      .003028
           bits 15 to 22  2508.26       .117      .546472
           bits 16 to 23  2565.73       .930      .823692
           bits 17 to 24  2520.75       .293      .615412
           bits 18 to 25  2576.68      1.084      .860915
           bits 19 to 26  2483.74      -.230      .409066
           bits 20 to 27  2458.99      -.580      .280968
           bits 21 to 28  2418.79     -1.148      .125394
           bits 22 to 29  2551.79       .732      .768039
           bits 23 to 30  2477.93      -.312      .377483
           bits 24 to 31  2590.89      1.285      .900668
           bits 25 to 32  2574.21      1.050      .853030

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THIS IS A PARKING LOT TEST                      ::        
     :: In a square of side 100, randomly "park" a car---a circle of  ::        
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::        
     :: time parking "by ear".  That is, if an attempt to park a car  ::        
     :: causes a crash with one already parked, try again at a new    ::        
     :: random location. (To avoid path problems, consider parking    ::        
     :: helicopters rather than cars.)   Each attempt leads to either ::        
     :: a crash or a success, the latter followed by an increment to  ::        
     :: the list of cars already parked. If we plot n:  the number of ::        
     :: attempts, versus k::  the number successfully parked, we get a::        
     :: curve that should be similar to those provided by a perfect   ::        
     :: random number generator.  Theory for the behavior of such a   ::        
     :: random curve seems beyond reach, and as graphics displays are ::        
     :: not available for this battery of tests, a simple characteriz ::        
     :: ation of the random experiment is used: k, the number of cars ::        
     :: successfully parked after n=12,000 attempts. Simulation shows ::        
     :: that k should average 3523 with sigma 21.9 and is very close  ::        
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::        
     :: andard normal variable, which, converted to a uniform varia-  ::        
     :: ble, provides input to a KSTEST based on a sample of 10.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           CDPARK: result of ten tests on file o:\tmp\f48h.raw
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3508    z-score:  -.685 p-value: .246694
            Successes: 3517    z-score:  -.274 p-value: .392053
            Successes: 3558    z-score:  1.598 p-value: .944998
            Successes: 3545    z-score:  1.005 p-value: .842447
            Successes: 3474    z-score: -2.237 p-value: .012629
            Successes: 3524    z-score:   .046 p-value: .518210
            Successes: 3529    z-score:   .274 p-value: .607947
            Successes: 3533    z-score:   .457 p-value: .676028
            Successes: 3561    z-score:  1.735 p-value: .958644
            Successes: 3521    z-score:  -.091 p-value: .463618
 
           square size   avg. no.  parked   sample sigma
             100.            3527.000       24.062
            KSTEST for the above 10: p=  .308149

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THE MINIMUM DISTANCE TEST                       ::        
     :: It does this 100 times::   choose n=8000 random points in a   ::        
     :: square of side 10000.  Find d, the minimum distance between   ::        
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::        
     :: pendent uniform, then d^2, the square of the minimum distance ::        
     :: should be (very close to) exponentially distributed with mean ::        
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::        
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::        
     :: formity for random points in the square. Test numbers=0 mod 5 ::        
     :: are printed but the KSTEST is based on the full set of 100    ::        
     :: random choices of 8000 points in the 10000x10000 square.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               This is the MINIMUM DISTANCE test
              for random integers in the file o:\tmp\f48h.raw
     Sample no.    d^2     avg     equiv uni            
           5    2.3942    .8272     .909842
          10     .5886    .6785     .446537
          15     .2552    .8042     .226195
          20     .8087    .9199     .556350
          25    3.8903    .9550     .979957
          30     .0737    .9112     .071401
          35     .2731    .9445     .240006
          40    1.5733    .9208     .794264
          45    1.8236    .9586     .840024
          50     .4269    .8998     .348873
          55    1.4503    .8723     .767198
          60     .6944    .9464     .502348
          65     .6878    .9074     .499052
          70     .0859    .9477     .082700
          75     .0718    .9171     .069634
          80     .2252    .8847     .202563
          85     .4040    .9027     .333698
          90     .2980    .8793     .258815
          95    1.0396    .8837     .648229
         100     .7104    .9163     .510313
     MINIMUM DISTANCE TEST for o:\tmp\f48h.raw
          Result of KS test on 20 transformed mindist^2's:
                                  p-value= .660907

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::              THE 3DSPHERES TEST                               ::        
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::        
     :: point, center a sphere large enough to reach the next closest ::        
     :: point. Then the volume of the smallest such sphere is (very   ::        
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::        
     :: the radius cubed is exponential with mean 30. (The mean is    ::        
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::        
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::        
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::        
     ::  KSTEST is done on the 20 p-values.                           ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               The 3DSPHERES test for file o:\tmp\f48h.raw
 sample no:  1     r^3=   8.949     p-value= .25792
 sample no:  2     r^3=   7.534     p-value= .22209
 sample no:  3     r^3=   7.717     p-value= .22682
 sample no:  4     r^3=  13.363     p-value= .35946
 sample no:  5     r^3=  62.379     p-value= .87498
 sample no:  6     r^3=   8.938     p-value= .25764
 sample no:  7     r^3=   7.113     p-value= .21107
 sample no:  8     r^3=   6.290     p-value= .18914
 sample no:  9     r^3=   7.392     p-value= .21838
 sample no: 10     r^3=  46.192     p-value= .78556
 sample no: 11     r^3= 100.703     p-value= .96515
 sample no: 12     r^3=  33.231     p-value= .66968
 sample no: 13     r^3=  60.523     p-value= .86700
 sample no: 14     r^3=   4.215     p-value= .13108
 sample no: 15     r^3=  70.448     p-value= .90447
 sample no: 16     r^3=  24.422     p-value= .55695
 sample no: 17     r^3=   6.519     p-value= .19531
 sample no: 18     r^3=   3.215     p-value= .10161
 sample no: 19     r^3=  34.994     p-value= .68854
 sample no: 20     r^3=  13.655     p-value= .36565
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file o:\tmp\f48h.raw      p-value= .679786
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::      This is the SQEEZE test                                  ::        
     ::  Random integers are floated to get uniforms on [0,1). Start- ::        
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::        
     ::  iterations necessary to reduce k to 1, using the reduction   ::        
     ::  k=ceiling(k*U), with U provided by floating integers from    ::        
     ::  the file being tested.  Such j's are found 100,000 times,    ::        
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::        
     ::  are used to provide a chi-square test for cell frequencies.  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
            RESULTS OF SQUEEZE TEST FOR o:\tmp\f48h.raw
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
     2.0     -.7     -.4    -1.1    -1.0      .5
      .2    -1.8     -.7     -.2    -1.7      .1
     -.3      .6      .2     1.5      .7      .2
     -.1    -1.2     -.1     -.2      .1     -.8
      .1      .4     1.5     -.9     -.2      .6
      .5     1.2     -.2     1.7      .1      .2
     -.7      .8     -.4    -1.8     -.6     1.0
    -1.1
           Chi-square with 42 degrees of freedom: 35.018
              z-score=  -.762  p-value= .230956
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The  OVERLAPPING SUMS test                        ::        
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::        
     :: form [0,1) variables.  Then overlapping sums,                 ::        
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::        
     :: The S's are virtually normal with a certain covariance mat-   ::        
     :: rix.  A linear transformation of the S's converts them to a   ::        
     :: sequence of independent standard normals, which are converted ::        
     :: to uniform variables for a KSTEST. The  p-values from ten     ::        
     :: KSTESTs are given still another KSTEST.                       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Test no.  1      p-value  .134985
                Test no.  2      p-value  .505769
                Test no.  3      p-value  .102591
                Test no.  4      p-value  .075882
                Test no.  5      p-value  .238573
                Test no.  6      p-value  .787957
                Test no.  7      p-value  .353805
                Test no.  8      p-value  .143879
                Test no.  9      p-value  .018865
                Test no. 10      p-value  .501902
   Results of the OSUM test for o:\tmp\f48h.raw
        KSTEST on the above 10 p-values:  .972208

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the RUNS test.  It counts runs up, and runs down, ::        
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::        
     :: ing the 32-bit integers in the specified file. This example   ::        
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::        
     :: contains an up-run of length 3, a down-run of length 2 and an ::        
     :: up-run of (at least) 2, depending on the next values.  The    ::        
     :: covariance matrices for the runs-up and runs-down are well    ::        
     :: known, leading to chisquare tests for quadratic forms in the  ::        
     :: weak inverses of the covariance matrices.  Runs are counted   ::        
     :: for sequences of length 10,000.  This is done ten times. Then ::        
     :: repeated.                                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           The RUNS test for file o:\tmp\f48h.raw
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for o:\tmp\f48h.raw:
       runs up; ks test for 10 p's: .988098
     runs down; ks test for 10 p's: .693896
                 Run test for o:\tmp\f48h.raw:
       runs up; ks test for 10 p's: .075595
     runs down; ks test for 10 p's: .941348

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::        
     :: the number of wins and the number of throws necessary to end  ::        
     :: each game.  The number of wins should be (very close to) a    ::        
     :: normal with mean 200000p and variance 200000p(1-p), with      ::        
     :: p=244/495.  Throws necessary to complete the game can vary    ::        
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::        
     :: A chi-square test is made on the no.-of-throws cell counts.   ::        
     :: Each 32-bit integer from the test file provides the value for ::        
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::        
     :: and taking 1 plus the integer part of the result.             ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Results of craps test for o:\tmp\f48h.raw
  No. of wins:  Observed Expected
                                98499    98585.86
                  98499= No. of wins, z-score= -.388 pvalue= .34883
   Analysis of Throws-per-Game:
 Chisq=  30.01 for 20 degrees of freedom, p=  .93025
               Throws Observed Expected  Chisq     Sum
                  1    66199    66666.7   3.281    3.281
                  2    37868    37654.3   1.213    4.493
                  3    27056    26954.7    .380    4.874
                  4    19460    19313.5   1.112    5.986
                  5    13630    13851.4   3.539    9.525
                  6    10054     9943.5   1.227   10.752
                  7     7093     7145.0    .379   11.131
                  8     5313     5139.1   5.887   17.017
                  9     3713     3699.9    .047   17.064
                 10     2643     2666.3    .204   17.268
                 11     1967     1923.3    .992   18.259
                 12     1381     1388.7    .043   18.302
                 13     1037     1003.7   1.104   19.406
                 14      719      726.1    .070   19.476
                 15      493      525.8   2.050   21.527
                 16      336      381.2   5.348   26.875
                 17      296      276.5   1.369   28.245
                 18      199      200.8    .017   28.261
                 19      159      146.0   1.160   29.422
                 20      109      106.2    .073   29.495
                 21      275      287.1    .511   30.006
            SUMMARY  FOR o:\tmp\f48h.raw
                p-value for no. of wins: .348828
                p-value for throws/game: .930245

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file o:\tmp\f48h.txt
